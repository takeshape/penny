{
  "$schema": "https://schema.takeshape.io/project-schema",
  "dataKey": "",
  "projectId": "06ccc3dc-a9da-4f5b-9142-5a104db52ee3",
  "version": 8,
  "created": "2022-04-21T15:47:16.247Z",
  "updated": "2022-04-25T19:39:31.180Z",
  "defaultLocale": "en-us",
  "locales": [
    "en-us"
  ],
  "apiVersion": "2",
  "workflows": {},
  "forms": {
    "Text": {
      "default": {
        "properties": {
          "primary": {
            "widget": "singleLineText"
          },
          "secondary": {
            "widget": "singleLineText"
          },
          "button": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "primary",
          "secondary",
          "button"
        ]
      }
    },
    "NavigationLink": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "href": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "name",
          "href"
        ]
      }
    },
    "Footer": {
      "default": {
        "properties": {
          "navigation": {
            "widget": "object",
            "properties": {
              "sections": {
                "widget": "repeater",
                "properties": {
                  "name": {
                    "widget": "singleLineText"
                  },
                  "items": {
                    "widget": "shapeArray"
                  }
                },
                "order": [
                  "name",
                  "items"
                ]
              }
            },
            "order": [
              "sections"
            ]
          },
          "newsletter": {
            "widget": "object",
            "properties": {
              "text": {
                "widget": "shapeObject"
              }
            },
            "order": [
              "text"
            ]
          }
        },
        "order": [
          "navigation",
          "newsletter"
        ]
      }
    },
    "Profile": {
      "default": {
        "properties": {
          "id": {
            "widget": "singleLineText"
          },
          "name": {
            "widget": "singleLineText"
          },
          "email": {
            "widget": "singleLineText"
          },
          "bio": {
            "widget": "paragraphText"
          },
          "avatar": {
            "widget": "image"
          },
          "shopifyCustomerId": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "id",
          "name",
          "email",
          "bio",
          "avatar",
          "shopifyCustomerId"
        ]
      }
    },
    "NavigationData": {
      "default": {
        "properties": {
          "message": {
            "widget": "singleLineText"
          },
          "links": {
            "widget": "object",
            "properties": {
              "categories": {
                "widget": "repeater",
                "properties": {
                  "name": {
                    "widget": "singleLineText"
                  },
                  "featured": {
                    "widget": "repeater",
                    "properties": {
                      "name": {
                        "widget": "singleLineText"
                      },
                      "href": {
                        "widget": "singleLineText"
                      }
                    },
                    "order": [
                      "name",
                      "href"
                    ]
                  },
                  "collection": {
                    "widget": "repeater",
                    "properties": {
                      "name": {
                        "widget": "singleLineText"
                      },
                      "href": {
                        "widget": "singleLineText"
                      }
                    },
                    "order": [
                      "name",
                      "href"
                    ]
                  },
                  "categories": {
                    "widget": "repeater",
                    "properties": {
                      "name": {
                        "widget": "singleLineText"
                      },
                      "href": {
                        "widget": "singleLineText"
                      }
                    },
                    "order": [
                      "name",
                      "href"
                    ]
                  },
                  "brands": {
                    "widget": "repeater",
                    "properties": {
                      "name": {
                        "widget": "singleLineText"
                      },
                      "href": {
                        "widget": "singleLineText"
                      }
                    },
                    "order": [
                      "name",
                      "href"
                    ]
                  }
                },
                "order": [
                  "name",
                  "featured",
                  "collection",
                  "categories",
                  "brands"
                ]
              },
              "pages": {
                "widget": "repeater",
                "properties": {
                  "name": {
                    "widget": "singleLineText"
                  },
                  "href": {
                    "widget": "singleLineText"
                  }
                },
                "order": [
                  "name",
                  "href"
                ]
              }
            },
            "order": [
              "categories",
              "pages"
            ]
          }
        },
        "order": [
          "message",
          "links"
        ]
      }
    }
  },
  "services": {
    "gorgias": {
      "id": "gorgias",
      "provider": "generic",
      "title": "Gorgias",
      "namespace": "Gorgias",
      "serviceType": "rest",
      "authenticationType": "basic",
      "options": {
        "endpoint": ""
      }
    },
    "reviews-io": {
      "id": "reviews-io",
      "provider": "reviewsIo",
      "title": "REVIEWS.io",
      "namespace": "ReviewsIo",
      "serviceType": "openapi",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://api.reviews.io/",
        "spec": "https://raw.githubusercontent.com/takeshape/openapi-specs/main/specs/reviews.io/v0.1.0-2.yml",
        "useRestfulNames": true
      }
    },
    "klaviyo": {
      "id": "klaviyo",
      "provider": "klaviyo",
      "title": "Klaviyo",
      "namespace": "Klaviyo",
      "serviceType": "openapi",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://a.klaviyo.com/api/",
        "spec": "https://klaviyo-openapi.s3.amazonaws.com/spec.json"
      }
    },
    "voucherify": {
      "id": "voucherify",
      "provider": "generic",
      "title": "Voucherify",
      "namespace": "Voucherify",
      "serviceType": "rest",
      "authenticationType": "bearer",
      "options": {
        "endpoint": "https://us1.api.voucherify.io/"
      }
    },
    "referral-candy": {
      "id": "referral-candy",
      "provider": "generic",
      "title": "Referral Candy",
      "namespace": "Referral",
      "serviceType": "rest",
      "authenticationType": "none",
      "options": {
        "endpoint": "https://my.referralcandy.com/api/v1/"
      }
    },
    "shopify": {
      "title": "Shopify",
      "namespace": "Shopify",
      "provider": "shopify",
      "serviceType": "graphql",
      "authenticationType": "oauth2Bearer",
      "options": {
        "shop": "",
        "endpoint": "",
        "shopifyPlus": false
      },
      "id": "shopify"
    },
    "recharge": {
      "id": "recharge",
      "provider": "generic",
      "title": "Recharge",
      "namespace": "Rechare",
      "serviceType": "rest",
      "authenticationType": "bearer",
      "options": {
        "endpoint": "https://api.rechargeapps.com"
      }
    },
    "shopify-storefront": {
      "id": "shopify-storefront",
      "provider": "generic",
      "title": "Shopify Storefront",
      "namespace": "ShopifyStorefront",
      "serviceType": "graphql",
      "authenticationType": "bearer",
      "options": {
        "endpoint": ""
      }
    },
    "open-id": {
      "id": "open-id",
      "provider": "oidc",
      "title": "OpenID",
      "serviceType": "authentication",
      "authenticationType": "none",
      "options": {
        "idClaim": "sub"
      }
    }
  },
  "indexedShapes": {},
  "queries": {
    "getFooter": {
      "shape": "Footer",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Footer"
      },
      "description": "Get a Footer by ID",
      "args": "TSGetSingletonArgs<Footer>"
    },
    "ReviewsIo_createInvitation": {
      "shape": "ReviewsIo_CreateInvitationResponse",
      "resolver": {
        "name": "rest:post",
        "service": "reviews-io",
        "path": "/invitation",
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "summary": "Queue review invitation",
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "format": "email",
                "type": "string"
              },
              "order_id": {
                "type": "string"
              },
              "products": {
                "items": {
                  "@ref": "reviews-io:Product"
                },
                "type": "array"
              },
              "template_id": {
                "description": "Template identifier",
                "type": "string"
              },
              "date_send": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": []
      }
    },
    "ReviewsIo_listProductReviews": {
      "shape": "ReviewsIo_ListProductReviewsResponse",
      "resolver": {
        "name": "rest:get",
        "service": "reviews-io",
        "path": "/product/review",
        "searchParams": {
          "ops": [
            {
              "path": "sku",
              "mapping": "$args.sku"
            },
            {
              "path": "mpn",
              "mapping": "$args.mpn"
            },
            {
              "path": "page",
              "mapping": "$args.page"
            },
            {
              "path": "per_page",
              "mapping": "$args.per_page"
            },
            {
              "path": "photos",
              "mapping": "$args.photos"
            },
            {
              "path": "verified_only",
              "mapping": "$args.verified_only"
            },
            {
              "path": "comments_only",
              "mapping": "$args.comments_only"
            },
            {
              "path": "minRating",
              "mapping": "$args.minRating"
            },
            {
              "path": "include_unpublished_images",
              "mapping": "$args.include_unpublished_images"
            },
            {
              "path": "include_moderated",
              "mapping": "$args.include_moderated"
            },
            {
              "path": "order_id",
              "mapping": "$args.order_id"
            },
            {
              "path": "min_date",
              "mapping": "$args.min_date"
            },
            {
              "path": "max_date",
              "mapping": "$args.max_date"
            }
          ],
          "serialize": {
            "paths": {
              "sku": {
                "style": "form"
              },
              "mpn": {
                "style": "form"
              },
              "page": {
                "style": "form"
              },
              "per_page": {
                "style": "form"
              },
              "photos": {
                "style": "form"
              },
              "verified_only": {
                "style": "form"
              },
              "comments_only": {
                "style": "form"
              },
              "minRating": {
                "style": "form"
              },
              "include_unpublished_images": {
                "style": "form"
              },
              "include_moderated": {
                "style": "form"
              },
              "order_id": {
                "style": "form"
              },
              "min_date": {
                "style": "form"
              },
              "max_date": {
                "style": "form"
              }
            }
          }
        }
      }
    },
    "getMyProfile": {
      "shape": "Profile",
      "resolver": {
        "name": "takeshape:find",
        "service": "takeshape:local",
        "shapeName": "Profile",
        "args": {
          "ops": [
            {
              "path": "where.id.eq",
              "mapping": "$claims.sub"
            }
          ]
        }
      },
      "description": "Get the signed in user's profile from ShapeDB"
    },
    "getProfile": {
      "shape": "Profile",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Get a profile by ID",
      "args": "TSGetArgs<Profile>"
    },
    "getProfileList": {
      "shape": "PaginatedList<Profile>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Returns a list of profiles in natural order.",
      "args": "TSListArgs<Profile>"
    },
    "getMyCustomer": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify-storefront",
        "fieldName": "customer",
        "args": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args"
            },
            {
              "path": "customerAccessToken",
              "mapping": "$claims.custom.customer_access_token"
            }
          ]
        }
      },
      "shape": "ShopifyStorefront_Customer"
    },
    "getMyAdminCustomer": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "customer",
        "args": {
          "ops": [
            {
              "path": "id",
              "mapping": "$claims.sub"
            }
          ]
        }
      },
      "shape": "Shopify_Customer"
    },
    "getMyLoyaltyCard": {
      "description": "Get a loyalty card from Voucherify",
      "shape": "local:Voucherify_LoyaltyCard",
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.custom.customer_access_token)",
            "id": "customer",
            "name": "graphql:query",
            "service": "shopify-storefront",
            "fieldName": "customer",
            "options": {
              "selectionSet": "{ displayName email }"
            },
            "args": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$args"
                },
                {
                  "path": "customerAccessToken",
                  "mapping": "$claims.custom.customer_access_token"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "loyaltyCard",
            "name": "rest:post",
            "service": "voucherify",
            "path": {
              "ops": [
                {
                  "path": "campaignId",
                  "value": "camp_P4LtxxUSJyNCpRcq5XRmDCi5"
                }
              ],
              "serialize": {
                "template": "v1/loyalties/{campaignId}/members"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "customer",
                  "ops": [
                    {
                      "path": "source_id",
                      "mapping": "$resolvers.customer.email"
                    },
                    {
                      "path": "email",
                      "mapping": "$resolvers.customer.email"
                    },
                    {
                      "path": "name",
                      "mapping": "$resolvers.customer.displayName"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers.loyaltyCard"
            }
          ]
        }
      }
    },
    "getMyNewsletterSubscriptions": {
      "shape": {
        "type": "array",
        "items": {
          "@ref": "local:ProfileNewsletterStatus"
        }
      },
      "resolver": {
        "if": "!isEmpty($claims.email)",
        "name": "rest:get",
        "service": "klaviyo",
        "path": "/v2/lists",
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers[0]"
            },
            {
              "path": "[*].email",
              "mapping": "$claims.email"
            },
            {
              "path": "[*].listId",
              "mapping": "$loop.item.list_id"
            },
            {
              "path": "[*].listName",
              "mapping": "$loop.item.list_name"
            }
          ]
        }
      }
    },
    "getNavigationData": {
      "shape": "NavigationData",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "NavigationData"
      },
      "description": "Get a NavigationData by ID",
      "args": "TSGetSingletonArgs<NavigationData>"
    },
    "ShopifyStorefront_customer": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify-storefront",
        "fieldName": "customer"
      },
      "args": {
        "type": "object",
        "properties": {
          "customerAccessToken": {
            "type": "string",
            "description": "The customer access token."
          }
        },
        "required": [
          "customerAccessToken"
        ]
      },
      "shape": "ShopifyStorefront_Customer"
    }
  },
  "mutations": {
    "updateFooter": {
      "shape": "UpdateResult<Footer>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Footer"
      },
      "description": "Update Footer",
      "args": "UpdateArgs<Footer>"
    },
    "updateNavigationData": {
      "shape": "UpdateResult<NavigationData>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "NavigationData"
      },
      "description": "Update NavigationData",
      "args": "UpdateArgs<NavigationData>"
    },
    "upsertProfile": {
      "description": "A privileged user or webhook can upsert a user's profile in ShapeDB.",
      "shape": "Profile",
      "resolver": {
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers.createProfile.result"
            },
            {
              "path": "$",
              "mapping": "$resolvers.updateProfile.result"
            }
          ]
        },
        "compose": [
          {
            "id": "existingProfile",
            "name": "takeshape:find",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "where.id.eq",
                  "mapping": "$args.id"
                }
              ]
            }
          },
          {
            "if": "isEmpty($resolvers.existingProfile)",
            "id": "createProfile",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "input.id",
                  "mapping": "$args.id"
                },
                {
                  "path": "input.email",
                  "mapping": "$args.email"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.existingProfile)",
            "id": "updateProfile",
            "name": "takeshape:update",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "input._id",
                  "mapping": "$resolvers.existingProfile._id"
                },
                {
                  "path": "input.email",
                  "mapping": "$claims.email"
                }
              ]
            }
          }
        ]
      },
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email"
        ]
      }
    },
    "upsertMyProfile": {
      "description": "Upsert the signed-in user's profile in ShapeDB.",
      "shape": "Profile",
      "resolver": {
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers.createProfile.result"
            },
            {
              "path": "$",
              "mapping": "$resolvers.updateProfile.result"
            }
          ]
        },
        "compose": [
          {
            "if": "!isEmpty($claims.sub)",
            "id": "existingProfile",
            "name": "takeshape:find",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "where.id.eq",
                  "mapping": "$claims.sub"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($claims.sub) && !isEmpty($claims.email) && isEmpty($resolvers.existingProfile)",
            "id": "createProfile",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "input.id",
                  "mapping": "$claims.sub"
                },
                {
                  "path": "input.email",
                  "mapping": "$claims.email"
                },
                {
                  "path": "input.name",
                  "mapping": "$args.name"
                },
                {
                  "path": "input.bio",
                  "mapping": "$args.bio"
                },
                {
                  "path": "input.avatar.id",
                  "mapping": "$args.avatarId"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($claims.sub) && !isEmpty($claims.email) && !isEmpty($resolvers.existingProfile)",
            "id": "updateProfile",
            "name": "takeshape:update",
            "service": "takeshape:local",
            "shapeName": "Profile",
            "args": {
              "ops": [
                {
                  "path": "input._id",
                  "mapping": "$resolvers.existingProfile._id"
                },
                {
                  "path": "input.email",
                  "mapping": "$claims.email"
                },
                {
                  "path": "input.name",
                  "mapping": "$args.name"
                },
                {
                  "path": "input.bio",
                  "mapping": "$args.bio"
                },
                {
                  "path": "input.avatar.id",
                  "mapping": "$args.avatarId"
                }
              ]
            }
          }
        ]
      },
      "args": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "avatarId": {
            "type": "string"
          }
        }
      }
    },
    "createMyCart": {
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify-storefront",
        "fieldName": "cartCreate"
      },
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "shopify-storefront:CartInput",
            "description": "The fields used to create a cart."
          }
        }
      },
      "shape": "ShopifyStorefront_CartCreatePayload"
    },
    "updateProfile": {
      "shape": "UpdateResult<Profile>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Update Profile",
      "args": "UpdateArgs<Profile>"
    },
    "createProfile": {
      "shape": "CreateResult<Profile>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Create Profile",
      "args": "CreateArgs<Profile>"
    },
    "duplicateProfile": {
      "shape": "DuplicateResult<Profile>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Duplicate Profile",
      "args": "DuplicateArgs<Profile>"
    },
    "deleteProfile": {
      "shape": "DeleteResult<Profile>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Profile"
      },
      "description": "Delete Profile",
      "args": "DeleteArgs<Profile>"
    },
    "Voucherify_createOrder": {
      "description": "Create an order in Voucherify",
      "shape": "Voucherify_Order",
      "args": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "CREATED",
              "CANCELED",
              "FULFILLED"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "@ref": "local:Voucherify_OrderItem"
            }
          }
        }
      },
      "resolver": {
        "name": "rest:post",
        "service": "voucherify",
        "path": "v1/orders",
        "json": {
          "ops": [
            {
              "path": "customer.source_id",
              "mapping": "$args.email"
            },
            {
              "path": "status",
              "mapping": "$args.status"
            },
            {
              "path": "amount",
              "mapping": "$args.amount"
            },
            {
              "path": "items",
              "mapping": "$args.items"
            },
            {
              "path": "items[*]",
              "ops": [
                {
                  "path": "product_id",
                  "mapping": [
                    [
                      "get",
                      {
                        "path": "$parent.$value.id"
                      }
                    ]
                  ]
                },
                {
                  "path": "product",
                  "ops": [
                    {
                      "path": "override",
                      "value": true
                    },
                    {
                      "path": "name",
                      "mapping": "$parent.$parent.$value.name"
                    }
                  ]
                }
              ]
            },
            {
              "path": "items[*].id",
              "op": "remove"
            },
            {
              "path": "items[*].name",
              "op": "remove"
            }
          ]
        }
      }
    },
    "Klaviyo_addMembers": {
      "shape": "Klaviyo_AddMembersResponse",
      "resolver": {
        "name": "rest:post",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        },
        "results": {
          "ops": [
            {
              "path": "items",
              "mapping": "$resolvers[0]"
            }
          ]
        }
      },
      "summary": "Add Members to a List",
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "local:AddListMembersInput"
          },
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      }
    },
    "subscribeMyEmailToNewsletter": {
      "shape": "Klaviyo_AddMembersResponse",
      "resolver": {
        "name": "rest:post",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "profiles[0].email",
              "mapping": "$claims.email"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        },
        "results": {
          "ops": [
            {
              "path": "items",
              "mapping": "$resolvers[0]"
            }
          ]
        }
      },
      "summary": "Add Members to a List",
      "args": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      }
    },
    "unsubscribeMyEmailFromNewsletter": {
      "shape": "Klaviyo_200Ok",
      "resolver": {
        "name": "rest:delete",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "emails[0]",
              "mapping": "$claims.email"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "summary": "Remove Profiles From List",
      "args": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      }
    },
    "Klaviyo_removeMembers": {
      "shape": "Klaviyo_200Ok",
      "resolver": {
        "name": "rest:delete",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "summary": "Remove Profiles From List",
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "description": "\nThe profiles that you would like to remove from the list. \n\nExample:\n\n{\n  \"emails\":[\"george.washington@klaviyo.com\",\"abraham.lincoln@klaviyo.com\"],\n  \"phone_numbers\":[\"+13239169023\"],\n  \"push_tokens\":[\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r\"]\n}\n",
            "properties": {
              "emails": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "phone_numbers": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "push_tokens": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      },
      "Gorgias_createTicket": {
        "shape": "Gorgias_CreateTicketResponse",
        "resolver": {
          "name": "rest:post",
          "service": "gorgias",
          "path": "/tickets",
          "json": {
            "ops": [
              {
                "path": "customer.email",
                "mapping": "$args.email"
              },
              {
                "path": "messages",
                "value": [
                  {
                    "channel": "email",
                    "from_agent": false,
                    "source": {
                      "to": [
                        {
                          "address": "qw72eg20ez05v4dy@emails.gorgias.com"
                        }
                      ]
                    },
                    "via": "api"
                  }
                ]
              },
              {
                "path": "messages[0].body_text",
                "mapping": "$args.message"
              },
              {
                "path": "messages[0].source.from.address",
                "mapping": "$args.email"
              }
            ]
          }
        },
        "args": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "body",
            "email"
          ]
        }
      }
    },
    "Shopify_products": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "products"
      },
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list.",
            "default": false
          },
          "sortKey": {
            "@ref": "shopify:ProductSortKeys",
            "description": "Sort the underlying list by the given key.",
            "default": "ID"
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `barcode`\n - `created_at`\n - `delivery_profile_id`\n - `error_feedback`\n - `gift_card`\n - `has_only_composites`\n - `has_only_default_variant`\n - `id`\n - `inventory_total`\n - `is_price_reduced`\n - `out_of_stock_somewhere`\n - `price`\n - `product_type`\n - `publishable_status`\n - `published_status`\n - `sku`\n - `status`\n - `tag`\n - `tag_not`\n - `title`\n - `updated_at`\n - `vendor`\n\nSee the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of an existing saved search.\nThe search’s query string is used as the query argument.\nRefer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch)."
          }
        }
      },
      "shape": "Shopify_ProductConnection"
    },
    "Shopify_product": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "product"
      },
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of the Product to return."
          }
        },
        "required": [
          "id"
        ]
      },
      "shape": "Shopify_Product"
    },
    "ShopifyStorefront_customerAccessTokenCreate": {
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify-storefront",
        "fieldName": "customerAccessTokenCreate"
      },
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "shopify-storefront:CustomerAccessTokenCreateInput",
            "description": "The fields used to create a customer access token."
          }
        },
        "required": [
          "input"
        ]
      },
      "shape": "ShopifyStorefront_CustomerAccessTokenCreatePayload"
    },
    "ShopifyStorefront_customerCreate": {
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify-storefront",
        "fieldName": "customerCreate"
      },
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "shopify-storefront:CustomerCreateInput",
            "description": "The fields used to create a new customer."
          }
        },
        "required": [
          "input"
        ]
      },
      "shape": "ShopifyStorefront_CustomerCreatePayload"
    },
    "createCustomer": {
      "resolver": {
        "name": "rest:post",
        "service": "shopify",
        "path": "/admin/api/2022-04/customers.json",
        "options": {
          "endpoint": "https://deluxe-sample-project.myshopify.com/"
        },
        "json": {
          "ops": [
            {
              "path": "customer.first_name",
              "mapping": "$args.input.firstName"
            },
            {
              "path": "customer.last_name",
              "mapping": "$args.input.lastName"
            },
            {
              "path": "customer.email",
              "mapping": "$args.input.email"
            },
            {
              "path": "customer.password",
              "mapping": "$args.input.password"
            },
            {
              "path": "customer.password_confirmation",
              "mapping": "$args.input.password"
            },
            {
              "path": "customer.phone",
              "mapping": "$args.input.phone"
            },
            {
              "path": "customer.send_email_welcome",
              "value": false
            },
            {
              "path": "customer.verified_email",
              "value": true
            }
          ]
        },
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver"
            },
            {
              "path": "customer.id",
              "mapping": "$finalResolver.customer.admin_graphql_api_id"
            }
          ]
        }
      },
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "acceptsMarketing": {
                "type": "boolean"
              }
            },
            "required": [
              "email",
              "password"
            ]
          }
        },
        "required": [
          "input"
        ]
      },
      "shape": "CreateCustomerPayload"
    },
    "ShopifyStorefront_customerRecover": {
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify-storefront",
        "fieldName": "customerRecover"
      },
      "args": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the customer to recover."
          }
        },
        "required": [
          "email"
        ]
      },
      "shape": "ShopifyStorefront_CustomerRecoverPayload"
    }
  },
  "shapes": {
    "Reviews_PostResponse": {
      "id": "Reviews_PostResponse",
      "name": "Reviews_PostResponse",
      "title": "Reviews_PostResponse",
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Voucherify_OrderItem": {
      "id": "Voucherify_OrderItem",
      "name": "Voucherify_OrderItem",
      "title": "Voucherify_OrderItem",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          }
        }
      }
    },
    "Voucherify_Order": {
      "id": "Voucherify_Order",
      "name": "Voucherify_Order",
      "title": "Voucherify_Order",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardStats": {
      "id": "Voucherify_LoyaltyCardStats",
      "name": "Voucherify_LoyaltyCardStats",
      "title": "Voucherify_LoyaltyCardStats",
      "schema": {
        "type": "object",
        "properties": {
          "points": {
            "type": "integer"
          },
          "balance": {
            "type": "integer"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardAsset": {
      "id": "Voucherify_LoyaltyCardAsset",
      "name": "Voucherify_LoyaltyCardAsset",
      "title": "Voucherify_LoyaltyCardAsset",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardAssets": {
      "id": "Voucherify_LoyaltyCardAssets",
      "name": "Voucherify_LoyaltyCardAssets",
      "title": "Voucherify_LoyaltyCardAssets",
      "schema": {
        "type": "object",
        "properties": {
          "qr": {
            "@ref": "local:Voucherify_LoyaltyCardAsset"
          },
          "barcode": {
            "@ref": "local:Voucherify_LoyaltyCardAsset"
          }
        }
      }
    },
    "Voucherify_LoyaltyCard": {
      "id": "Voucherify_LoyaltyCard",
      "name": "Voucherify_LoyaltyCard",
      "title": "Voucherify_LoyaltyCard",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          },
          "campaign_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "loyalty_card": {
            "@ref": "local:Voucherify_LoyaltyCardStats"
          },
          "active": {
            "type": "boolean"
          },
          "assets": {
            "@ref": "local:Voucherify_LoyaltyCardAssets"
          }
        }
      }
    },
    "Profile": {
      "id": "K1WGTS1Yn",
      "name": "Profile",
      "title": "Profile",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "ID",
            "@mapping": "takeshape:local:Profile.zCUrxUP8h"
          },
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:Profile.-DrKuNqxZ"
          },
          "email": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Email",
            "@mapping": "takeshape:local:Profile.H8n0k9-ew"
          },
          "bio": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Bio",
            "@mapping": "takeshape:local:Profile.2nWp5by8j"
          },
          "avatar": {
            "description": "",
            "@ref": "local:Asset",
            "title": "Avatar",
            "@mapping": "takeshape:local:Profile.k0Ha4O7oV",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            }
          },
          "shopifyCustomerId": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Shopify Customer Id"
          },
          "shopifyCustomer": {
            "@ref": "shopify:Customer",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "customer",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.shopifyCustomerId"
                  }
                ]
              }
            }
          },
          "loyaltyCard": {
            "title": "Voucherify Loyalty Card",
            "description": "",
            "@ref": "local:Voucherify_LoyaltyCard",
            "@resolver": {
              "options": {
                "ignoreErrors": true
              },
              "name": "rest:post",
              "service": "voucherify",
              "path": {
                "ops": [
                  {
                    "path": "campaignId",
                    "value": "camp_P4LtxxUSJyNCpRcq5XRmDCi5"
                  }
                ],
                "serialize": {
                  "template": "v1/loyalties/{campaignId}/members"
                }
              },
              "json": {
                "ops": [
                  {
                    "path": "customer",
                    "ops": [
                      {
                        "path": "source_id",
                        "mapping": "$source.email"
                      },
                      {
                        "path": "email",
                        "mapping": "$source.email"
                      },
                      {
                        "path": "name",
                        "mapping": "$source.name"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "newsletters": {
            "title": "Newsletter Subscriptions",
            "description": "",
            "type": "array",
            "items": {
              "@ref": "local:ProfileNewsletterStatus"
            },
            "@resolver": {
              "name": "rest:get",
              "id": "lists",
              "service": "klaviyo",
              "path": "/v2/lists",
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": "$resolvers[0]"
                  },
                  {
                    "path": "[*].email",
                    "mapping": "$source.email"
                  },
                  {
                    "path": "[*].listId",
                    "mapping": "$loop.item.list_id"
                  },
                  {
                    "path": "[*].listName",
                    "mapping": "$loop.item.list_name"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ProfileNewsletterStatus": {
      "id": "ProfileNewsletterStatus",
      "name": "ProfileNewsletterStatus",
      "title": "ProfileNewsletterStatus",
      "schema": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "description": "",
            "title": "List ID"
          },
          "listName": {
            "type": "string",
            "description": "",
            "title": "List Name"
          },
          "subscribed": {
            "type": "boolean",
            "description": "",
            "title": "Subscribed",
            "@resolver": {
              "name": "rest:post",
              "service": "klaviyo",
              "path": {
                "ops": [
                  {
                    "path": "list_id",
                    "mapping": "$source.listId"
                  }
                ],
                "serialize": {
                  "template": "/v2/list/{list_id}/get-members"
                }
              },
              "json": {
                "ops": [
                  {
                    "path": "$.emails[0]",
                    "mapping": "$source.email"
                  }
                ]
              },
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": [
                      [
                        "expressionEval",
                        {
                          "expression": "$resolvers[0].length > 0"
                        }
                      ]
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "GetListMembersInput": {
      "name": "GetListMembersInput",
      "id": "GetListMembersInput",
      "title": "GetListMembersInput",
      "schema": {
        "type": "object",
        "description": "\nThe profiles that you would like to remove from the list. \n\nExample:\n\n{\n  \"emails\":[\"george.washington@klaviyo.com\",\"abraham.lincoln@klaviyo.com\"],\n  \"phone_numbers\":[\"+13239169023\"],\n  \"push_tokens\":[\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r\"]\n}\n",
        "properties": {
          "emails": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phone_numbers": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "push_tokens": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      }
    },
    "AddListMembersInput": {
      "name": "AddListMembersInput",
      "title": "AddListMembersInput",
      "id": "AddListMembersInput",
      "schema": {
        "description": "The profiles that you would like to add to the list. Each object in the array must have an `email` or `phone_number`. You can also provide additional properties as key-value pairs.",
        "properties": {
          "profiles": {
            "minItems": 0,
            "maxItems": 100,
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            },
            "type": "array"
          }
        },
        "required": [
          "profiles"
        ],
        "type": "object"
      }
    },
    "NavigationDataLinksCategoriesFeatured": {
      "id": "68vvVsGMR",
      "name": "NavigationDataLinksCategoriesFeatured",
      "title": "Navigation Data Links Categories Featured",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesFeatured.ju6MThWm_"
          },
          "href": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "href",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesFeatured.Yvb2N4Bwq"
          }
        }
      }
    },
    "NavigationDataLinksCategoriesCollection": {
      "id": "wyJWNPt3z",
      "name": "NavigationDataLinksCategoriesCollection",
      "title": "Navigation Data Links Categories Collection",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesCollection.MHxRsVP0V"
          },
          "href": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "href",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesCollection.OJ88NAamE"
          }
        }
      }
    },
    "NavigationDataLinksCategories": {
      "id": "gFm-OwTpX",
      "name": "NavigationDataLinksCategories",
      "title": "Navigation Data Links Categories",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksCategories.x_VqrjyTh"
          },
          "featured": {
            "title": "featured",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksCategoriesFeatured"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinksCategories.68vvVsGMR"
          },
          "collection": {
            "title": "collection",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksCategoriesCollection"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinksCategories.wyJWNPt3z"
          },
          "categories": {
            "title": "categories",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksCategoriesCategories"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinksCategories.l8hbX9gQa"
          },
          "brands": {
            "title": "brands",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksCategoriesBrands"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinksCategories.ZN1Zl5dGX"
          }
        }
      }
    },
    "NavigationDataLinksPages": {
      "id": "w2GofQlUo",
      "name": "NavigationDataLinksPages",
      "title": "Navigation Data Links Pages",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksPages.rNquPKTsP"
          },
          "href": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "href",
            "@mapping": "takeshape:local:NavigationDataLinksPages.5WjR-bis-"
          }
        }
      }
    },
    "NavigationDataLinks": {
      "id": "pjLk12fP9",
      "name": "NavigationDataLinks",
      "title": "Navigation Data Links",
      "schema": {
        "type": "object",
        "properties": {
          "categories": {
            "title": "categories",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksCategories"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinks.gFm-OwTpX"
          },
          "pages": {
            "title": "pages",
            "description": "",
            "items": {
              "@ref": "local:NavigationDataLinksPages"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationDataLinks.w2GofQlUo"
          }
        }
      }
    },
    "NavigationData": {
      "id": "VHo3Y6Rab",
      "name": "NavigationData",
      "title": "Navigation Data",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "message",
            "@mapping": "takeshape:local:NavigationData.oXXaz-sxe"
          },
          "links": {
            "title": "links",
            "description": "",
            "@ref": "local:NavigationDataLinks",
            "@mapping": "takeshape:local:NavigationData.pjLk12fP9"
          }
        }
      }
    },
    "NavigationDataLinksCategoriesCategories": {
      "id": "l8hbX9gQa",
      "name": "NavigationDataLinksCategoriesCategories",
      "title": "Navigation Data Links Categories Categories",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesCategories.bxi7I7fb_"
          },
          "href": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "href",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesCategories.LH1Ztc4Ii"
          }
        }
      }
    },
    "NavigationDataLinksCategoriesBrands": {
      "id": "ZN1Zl5dGX",
      "name": "NavigationDataLinksCategoriesBrands",
      "title": "Navigation Data Links Categories Brands",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "name",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesBrands.0EyRktMNj"
          },
          "href": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "href",
            "@mapping": "takeshape:local:NavigationDataLinksCategoriesBrands.I0s8qSosl"
          }
        }
      }
    },
    "Text": {
      "id": "gl5yJyZb7",
      "name": "Text",
      "title": "Text",
      "description": "Reusable text shape",
      "schema": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "title": "Primary",
            "@mapping": "takeshape:local:Text.83c8_dKaO"
          },
          "secondary": {
            "type": "string",
            "title": "Secondary",
            "@mapping": "takeshape:local:Text._AFSl6JSe"
          },
          "button": {
            "type": "string",
            "title": "Button",
            "@mapping": "takeshape:local:Text.Hpree2AIm"
          }
        }
      }
    },
    "NavigationLink": {
      "id": "ugCpxVXCO",
      "name": "NavigationLink",
      "title": "Navigation Link",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "@mapping": "takeshape:local:NavigationLink.cLCSz9EWu"
          },
          "href": {
            "type": "string",
            "title": "Href",
            "@mapping": "takeshape:local:NavigationLink.J_fkfs7w7"
          }
        }
      }
    },
    "FooterNavigationSections": {
      "id": "RcAzYGCEA",
      "name": "FooterNavigationSections",
      "title": "Footer Navigation Sections",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:FooterNavigationSections.BeZ6ywWzG"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:NavigationLink"
                }
              ]
            },
            "description": "",
            "title": "Items",
            "@mapping": "takeshape:local:FooterNavigationSections.vwvZ3gpJ6"
          }
        }
      }
    },
    "FooterNavigation": {
      "id": "oFGJhE0k9",
      "name": "FooterNavigation",
      "title": "Footer Navigation",
      "schema": {
        "type": "object",
        "properties": {
          "sections": {
            "title": "Sections",
            "description": "",
            "type": "array",
            "items": {
              "@ref": "local:FooterNavigationSections"
            },
            "@mapping": "takeshape:local:FooterNavigation.RcAzYGCEA"
          }
        }
      }
    },
    "FooterNewsletter": {
      "id": "kmSZztbAu",
      "name": "FooterNewsletter",
      "title": "Footer Newsletter",
      "schema": {
        "type": "object",
        "properties": {
          "text": {
            "oneOf": [
              {
                "@ref": "local:Text"
              }
            ],
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FooterNewsletter.lJadcfQQm"
          }
        }
      }
    },
    "Footer": {
      "id": "vT1T1S22q",
      "name": "Footer",
      "title": "Footer",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "navigation": {
            "title": "Navigation",
            "description": "",
            "@ref": "local:FooterNavigation",
            "@mapping": "takeshape:local:Footer.oFGJhE0k9"
          },
          "newsletter": {
            "title": "Newsletter",
            "description": "",
            "@ref": "local:FooterNewsletter",
            "@mapping": "takeshape:local:Footer.kmSZztbAu"
          }
        }
      }
    },
    "Shopify_Product": {
      "id": "Shopify_Product",
      "name": "Shopify_Product",
      "title": "Shopify_Product",
      "schema": {
        "extends": [
          {
            "@ref": "shopify:Product"
          },
          {
            "type": "object",
            "properties": {
              "reviews": {
                "@ref": "reviews-io:ListProductReviewsResponse",
                "@resolver": {
                  "name": "rest:get",
                  "service": "reviews-io",
                  "path": "/product/review",
                  "options": {
                    "ignoreErrors": true,
                    "ttl": 3600
                  },
                  "searchParams": {
                    "ops": [
                      {
                        "path": "sku",
                        "mapping": [
                          [
                            "get",
                            {
                              "path": "$source.id"
                            }
                          ],
                          [
                            "replace",
                            {
                              "pattern": "gid://shopify/Product/",
                              "replacement": ""
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "recharge": {
                "description": "The Recharge subscription data associated with this product",
                "title": "Recharge",
                "@ref": "local:Recharge_Product",
                "@resolver": {
                  "name": "rest:get",
                  "service": "recharge",
                  "options": {
                    "ignoreErrors": true,
                    "ttl": 3600
                  },
                  "path": "/products",
                  "searchParams": {
                    "ops": [
                      {
                        "path": "shopify_product_id",
                        "mapping": [
                          [
                            "get",
                            {
                              "path": "$source.id"
                            }
                          ],
                          [
                            "replace",
                            {
                              "pattern": "gid://shopify/Product/",
                              "replacement": ""
                            }
                          ]
                        ]
                      }
                    ]
                  },
                  "results": {
                    "ops": [
                      {
                        "path": "$",
                        "mapping": "$finalResolver.products[0]"
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Recharge_Product": {
      "id": "Recharge_Product",
      "name": "Recharge_Product",
      "title": "Recharge_Product",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "title": "ID"
          },
          "product_id": {
            "type": "number",
            "title": "product_id"
          },
          "shopify_product_id": {
            "type": "number",
            "title": "shopify_product_id"
          },
          "discount_type": {
            "type": "string"
          },
          "discount_amount": {
            "type": "number",
            "title": "discount_amount"
          },
          "subscription_defaults": {
            "type": "object",
            "title": "subscription_defaults",
            "properties": {
              "charge_interval_frequency": {
                "type": "number"
              },
              "cutoff_day_of_month": {
                "type": "number"
              },
              "cutoff_day_of_week": {
                "type": "number"
              },
              "expire_after_specific_number_of_charges": {
                "type": "number"
              },
              "order_day_of_month": {
                "type": "number"
              },
              "order_day_of_week": {
                "type": "number"
              },
              "order_interval_frequency": {
                "type": "number"
              },
              "order_interval_unit": {
                "type": "string"
              },
              "storefront_purchase_options": {
                "type": "string"
              },
              "order_interval_frequency_options": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "external_product_id": {
            "type": "string",
            "title": "external_product_id"
          },
          "brand": {
            "type": "string",
            "title": "brand"
          },
          "images": {
            "type": "object",
            "title": "images",
            "properties": {
              "large": {
                "type": "string",
                "title": "large"
              },
              "medium": {
                "type": "string",
                "title": "medium"
              },
              "original": {
                "type": "string",
                "title": "original"
              },
              "small": {
                "type": "string",
                "title": "small"
              }
            }
          },
          "title": {
            "type": "string",
            "title": "title"
          }
        }
      }
    },
    "Gorgias_CreateTicketResponse": {
      "id": "Gorgias_CreateTicketResponse",
      "name": "Gorgias_CreateTicketResponse",
      "title": "Gorgias_CreateTicketResponse",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ]
      }
    },
    "CreateCustomerPayload": {
      "id": "CreateCustomerPayload",
      "name": "CreateCustomerPayload",
      "title": "CreateCustomerPayload",
      "schema": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "verified_email": {
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  },
  "schemaVersion": "3.18.0"
}
